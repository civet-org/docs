(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{121:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),b=(n(0),n(131)),c={id:"api-events",title:"Events",sidebar_label:"Events"},i={id:"api-events",title:"Events",description:"NPM | GitHub",source:"@site/docs/api-events.md",permalink:"/docs/api-events",editUrl:"https://github.com/civet-org/civet-org.github.io/edit/source/docs/api-events.md",sidebar_label:"Events",sidebar:"docs",previous:{title:"Core",permalink:"/docs/api-core"}},l=[{value:"<code>&lt;ConfigProvider&gt;</code>",id:"configprovider",children:[{value:"Props",id:"props",children:[]},{value:"Context",id:"context",children:[]},{value:"Related",id:"related",children:[]}]},{value:"<code>&lt;ConfigConsumer&gt;</code>",id:"configconsumer",children:[]},{value:"<code>useConfigContext</code>",id:"useconfigcontext",children:[]},{value:"<code>&lt;EventHandler&gt;</code>",id:"eventhandler",children:[{value:"Props",id:"props-1",children:[]}]},{value:"<code>composeHandlers</code>",id:"composehandlers",children:[{value:"Function arguments",id:"function-arguments",children:[]},{value:"Return type",id:"return-type",children:[]}]},{value:"<code>EventReceiver</code>",id:"eventreceiver",children:[{value:"Class members",id:"class-members",children:[]},{value:"Abstract members",id:"abstract-members",children:[]},{value:"Caveats",id:"caveats",children:[]}]},{value:"<code>isEventReceiver</code>",id:"iseventreceiver",children:[{value:"Function arguments",id:"function-arguments-1",children:[]},{value:"Return type",id:"return-type-1",children:[]}]},{value:"<code>eventReceiverPropType</code>",id:"eventreceiverproptype",children:[]}],o={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://npmjs.com/package/@civet/events"}),"NPM")," | ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/civet-org/events"}),"GitHub")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install @civet/events\n")),Object(b.b)("p",null,"The events module provides advanced event handling functionality."),Object(b.b)("p",null,"The ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api-core#datastore"}),Object(b.b)("inlineCode",{parentName:"a"},"DataStore"))," already has basic support for handling events. However, it is limited to updating all subscribers of a specific resource.\nIf you need more advanced event handling, this is the place to go."),Object(b.b)("h2",{id:"configprovider"},Object(b.b)("inlineCode",{parentName:"h2"},"<ConfigProvider>")),Object(b.b)("p",null,"Provides general configuration for event components to its descendants using React's context API."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"<ConfigProvider eventReceiver={receiver}>...</ConfigProvider>\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { ConfigProvider } from "@civet/events";\n')),Object(b.b)("h3",{id:"props"},"Props"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"eventReceiver"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}))))),Object(b.b)("h3",{id:"context"},"Context"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"eventReceiver"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}))))),Object(b.b)("h3",{id:"related"},"Related"),Object(b.b)("p",null,Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#configconsumer"}),Object(b.b)("inlineCode",{parentName:"a"},"<ConfigConsumer>")),", ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#eventhandler"}),Object(b.b)("inlineCode",{parentName:"a"},"<EventHandler>")),", ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#useconfigcontext"}),Object(b.b)("inlineCode",{parentName:"a"},"useConfigContext"))),Object(b.b)("h2",{id:"configconsumer"},Object(b.b)("inlineCode",{parentName:"h2"},"<ConfigConsumer>")),Object(b.b)("p",null,"Context consumer for ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#configprovider"}),Object(b.b)("inlineCode",{parentName:"a"},"<ConfigProvider>")),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"<ConfigConsumer>\n  {(context) => ...}\n</ConfigConsumer>\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { ConfigConsumer } from "@civet/events";\n')),Object(b.b)("h2",{id:"useconfigcontext"},Object(b.b)("inlineCode",{parentName:"h2"},"useConfigContext")),Object(b.b)("p",null,"Context hook for ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#configprovider"}),Object(b.b)("inlineCode",{parentName:"a"},"<ConfigProvider>")),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const configContext = useConfigContext();\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { useConfigContext } from "@civet/events";\n')),Object(b.b)("h2",{id:"eventhandler"},Object(b.b)("inlineCode",{parentName:"h2"},"<EventHandler>")),Object(b.b)("p",null,"Subscribes to an ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))," to update a ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api-core#resource"}),Object(b.b)("inlineCode",{parentName:"a"},"<Resource>"))," when events occur."),Object(b.b)("p",null,"Necessary configuration that is not directly specified is taken from the nearest ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#configprovider"}),Object(b.b)("inlineCode",{parentName:"a"},"<ConfigProvider>"))," and ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api-core#resource"}),Object(b.b)("inlineCode",{parentName:"a"},"<Resource>")),"."),Object(b.b)("p",null,"You can specify which events should lead to an update by either passing ",Object(b.b)("inlineCode",{parentName:"p"},"options")," to the ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))," or using ",Object(b.b)("inlineCode",{parentName:"p"},"onEvent"),".\n",Object(b.b)("inlineCode",{parentName:"p"},"onEvent")," can also be used to directly access events allowing you to add custom event logic to your components."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<EventHandler\n  options={{ some: "options" }}\n  onEvent={(e) => console.log("Received", e)}\n>\n  ...\n</Resource>\n')),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { EventHandler } from "@civet/events";\n')),Object(b.b)("h3",{id:"props-1"},"Props"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"eventReceiver"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))," to be used")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"resource"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"object")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/api-core#resourceprovider"}),"Resource context")," to be used")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"options"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"object")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))," options")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"onEvent"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"(event: any) => boolean")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Callback to filter events and handle your own event logic - if ",Object(b.b)("inlineCode",{parentName:"td"},"true")," is returned, the event is considered as handled and the resource is not update")))),Object(b.b)("h2",{id:"composehandlers"},Object(b.b)("inlineCode",{parentName:"h2"},"composeHandlers")),Object(b.b)("p",null,"Utility for composing multiple event handlers.\nInvokes each handler from left to right, but stops immediately when a handler returns ",Object(b.b)("inlineCode",{parentName:"p"},"true"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const composedHandler = composeHandlers(\n  (event) => console.log('Received', event),\n  (event) => ...\n);\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { composeHandlers } from "@civet/events";\n')),Object(b.b)("h3",{id:"function-arguments"},"Function arguments"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"...handlers"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"(event: any) => boolean")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Event handlers")))),Object(b.b)("h3",{id:"return-type"},"Return type"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"(event: any) => boolean")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Composed handlers")))),Object(b.b)("h2",{id:"eventreceiver"},Object(b.b)("inlineCode",{parentName:"h2"},"EventReceiver")),Object(b.b)("p",null,"EventReceiver base class."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"class CustomReceiver extends EventReceiver {\n  handleSubscribe(resource, options, handler) {\n    ...\n    const unsubscribe = () => {\n      ...\n    };\n    return unsubscribe;\n  }\n}\n\nconst receiver = new CustomReceiver();\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { EventReceiver } from "@civet/events";\n')),Object(b.b)("h3",{id:"class-members"},"Class members"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Return Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"subscribe"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"resource: ",Object(b.b)("inlineCode",{parentName:"td"},"object"),", options: ",Object(b.b)("inlineCode",{parentName:"td"},"object"),", handler: ",Object(b.b)("inlineCode",{parentName:"td"},"(event: any) => void")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"unsubscribe: ",Object(b.b)("inlineCode",{parentName:"td"},"() => void")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Subscribe to events")))),Object(b.b)("h3",{id:"abstract-members"},"Abstract members"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Return Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"handleSubscribe"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"resource: ",Object(b.b)("inlineCode",{parentName:"td"},"object"),", options: ",Object(b.b)("inlineCode",{parentName:"td"},"object"),", handler: ",Object(b.b)("inlineCode",{parentName:"td"},"(event: any) => void")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"unsubscribe: ",Object(b.b)("inlineCode",{parentName:"td"},"() => void")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}))))),Object(b.b)("h3",{id:"caveats"},"Caveats"),Object(b.b)("h4",{id:"abstract-functions"},"Abstract functions"),Object(b.b)("p",null,"The function ",Object(b.b)("inlineCode",{parentName:"p"},"subscribe")," internally invokes its abstract counterpart ",Object(b.b)("inlineCode",{parentName:"p"},"handleSubscribe")," and performs generic validation on its parameters and return value. Therefore, you should not just override it, but implement the abstract ",Object(b.b)("inlineCode",{parentName:"p"},"handleSubscribe")," method instead."),Object(b.b)("h2",{id:"iseventreceiver"},Object(b.b)("inlineCode",{parentName:"h2"},"isEventReceiver")),Object(b.b)("p",null,"Identifies ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))," instances."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const er = new EventReceiver();\n\nif (!isEventReceiver(er)) {\n  throw new Error("Should be a EventReceiver instance");\n}\n')),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { isEventReceiver } from "@civet/events";\n')),Object(b.b)("h3",{id:"function-arguments-1"},"Function arguments"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"eventReceiver"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"any")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The object to be checked")))),Object(b.b)("h3",{id:"return-type-1"},"Return type"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Whether ",Object(b.b)("inlineCode",{parentName:"td"},"eventReceiver")," is an instance of ",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver")))))),Object(b.b)("h2",{id:"eventreceiverproptype"},Object(b.b)("inlineCode",{parentName:"h2"},"eventReceiverPropType")),Object(b.b)("p",null,"PropType for ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"#eventreceiver"}),Object(b.b)("inlineCode",{parentName:"a"},"EventReceiver"))," instances."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const propTypes = {\n  optional: eventReceiverPropType,\n  required: eventReceiverPropType.isRequired,\n};\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { eventReceiverPropType } from "@civet/events";\n')))}p.isMDXComponent=!0},131:function(e,t,n){"use strict";n.d(t,"a",(function(){return j})),n.d(t,"b",(function(){return s}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},j=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,c=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),j=p(n),O=a,s=j["".concat(c,".").concat(O)]||j[O]||d[O]||b;return n?r.a.createElement(s,i(i({ref:t},o),{},{components:n})):r.a.createElement(s,i({ref:t},o))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,c=new Array(b);c[0]=O;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var o=2;o<b;o++)c[o]=n[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);